@model Spotify.Api.Client.Models.RecommendationModel.RecommendationViewModel
@using Spotify.Api.Client.Models.RecommendationModel;

<div class="row">
    <div class="col-md-12">
        <div class="alert alert-light">
            <h3>@Model.Message</h3>
            <hr />
            <p>Found @Model.Tracks.Count()</p>
            @if (Model.Genres.Any())
            {
                <p>Genres: @(string.Join("", Model.Genres))</p>
            }
        </div>
        <div class="row">
            @foreach (var record in Model.Tracks)
            {
                foreach (var artist in record.Artists)
                {
                    <div class="col-md-4 p-3">
                        <div class="card">

                            @switch (Model.Type)
                            {
                                case "Artist":
                                    @RenderArtistHtml(artist);
                                    break;
                                case "Genres":
                                    @RenderGenreHtml(artist, record);
                                    break;
                                case "Track":
                                    @RenderTrackHtml(artist, record);
                                    break;
                            }
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

@helper RenderTrackHtml(Artist artist, Track track)
{

    <div class="card-header"><h5>@artist.Name</h5></div>
    <div class="card-body">
        <div class="card-subtitle"><i>@track.Type</i></div>
        <p class="card-text">@track.Name, @($"{Math.Round((decimal)track.Duration_ms / 1000 / 60, 2)} min")</p>
        @if (!string.IsNullOrWhiteSpace(track.Preview_url))
        {
            <figure>
                <figcaption>Preview:</figcaption>
                <audio controls
                       src="@track.Preview_url">
                    Your browser does not support the
                    <code>audio</code> element.
                </audio>
            </figure>
        }
    </div>
    <div class="card-footer">
        <h6 class="card-link"><a href="@track.ExternalUrls.Spotify" target="_blank"><i class="fab fa-spotify"></i> Open in spotify</a></h6>
    </div>
}

@helper RenderArtistHtml(Artist artist)
{

    <div class="card-header"><h5>@artist.Name</h5></div>
    <div class="card-body">
        <div class="card-subtitle"><i>@artist.Type</i></div>
    </div>
    <div class="card-footer">
        <h6 class="card-link"><a href="@artist.ExternalUrls.Spotify" target="_blank"><i class="fab fa-spotify"></i> Open in spotify</a></h6>
    </div>
}

@helper RenderGenreHtml(Artist artist, Track track)
{
    <div class="card-header"><h5>@artist.Name</h5></div>
    <div class="card-body">
        <div class="card-subtitle"><i>@track.Type</i></div>
        <p class="card-text">@track.Name, @($"{Math.Round((decimal)track.Duration_ms / 1000 / 60, 2)} min")</p>
        @if (!string.IsNullOrWhiteSpace(track.Preview_url))
        {
            <figure>
                <figcaption>Preview:</figcaption>
                <audio controls
                       src="@track.Preview_url">
                    Your browser does not support the
                    <code>audio</code> element.
                </audio>
            </figure>
        }
    </div>
    <div class="card-footer">
        <h6 class="card-link"><a href="@track.ExternalUrls.Spotify" target="_blank"><i class="fab fa-spotify"></i> Open in spotify</a></h6>
    </div>
}